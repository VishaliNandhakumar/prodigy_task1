import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

a=pd.read_csv("/content/kc_house_data.csv")
a.head()
a.isnull().sum()
a.columns
a.tail()
a.dropna()
X = a[['bedrooms', 'bathrooms', 'sqft_living','sqft_lot','sqft_above','sqft_basement']] 
y = a['price'] 
from sklearn.preprocessing import MinMaxScaler  
scaler = MinMaxScaler() 
X_scaled = scaler.fit_transform(X) 
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.3)
model=LinearRegression()
model.fit(x_train,y_train)
y_predict= model.predict(x_test)
print(y_predict)
print(y_test)  
print("r2 score: %3f"% r2_score(y_test,y_predict))
print("mean squared error:%3f"% mean_squared_error(y_test,y_predict))

import pandas as pd 
import matplotlib.pyplot as plt 
import seaborn as sns 

plt.figure(figsize=(10, 6)) 
sns.histplot(a['price'], kde=True) 
plt.title('House Price Distribution') 
plt.xlabel('Price') 
plt.ylabel('Frequency') 
plt.show() 

plt.figure(figsize=(12, 8))
corr_matrix = a[['bedrooms', 'bathrooms', 'sqft_living', 'sqft_lot', 'floors', 'price']].corr()
sns.heatmap(corr_matrix, annot=True, cmap='coolwarm', fmt='.2f')
plt.title('Correlation Matrix of Features vs Price')
plt.show()  
  
